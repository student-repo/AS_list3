#!/bin/bash

function getInterfaces(){
local interfaces=()
local  i=0
          while read -r line || [[ -n "$line" ]]; do
          if ((i > 1)); then
           interfaces+=(${line%% *})
          fi      
                  i=$((i+1))
          done < /proc/net/dev
	echo ${interfaces[@]}
}

function getInterfacesData(){
local interfaces=("${!1}")
local interfacesData=()
        for i in "${interfaces[@]}"
         do
         
         
         singleInterface=(`cat /proc/net/dev | grep "$i"`)
         interfacesData+=(${singleInterface[1]})
         interfacesData+=(${singleInterface[9]})
 
         done
	echo ${interfacesData[@]}
}
	

read -r -a interfaces <<< "$(getInterfaces)"  # function getInterfaces return string, this line change string to array and assing into variable interfaces
read -r -a interfacesData <<< "$(getInterfacesData interfaces[@])"

#echo "${ddd[@]}"
while true
do

	floatWorkTime=`cat /proc/uptime | awk '{print $1;}'`

	i=${floatWorkTime%.*}
	((sec=i%60, i/=60, min=i%60, i/=60,  hrs=i%24, asd=i/24))

	echo "System work time: $asd days $hrs hours $min minutes $sec secounds"

	fullBat=`cat /sys/class/power_supply/BAT0/uevent | grep 'POWER_SUPPLY_ENERGY_FULL='`
	nowBat=`cat /sys/class/power_supply/BAT0/uevent | grep 'POWER_SUPPLY_ENERGY_NOW='`
	fullBattery=${fullBat##*=}
	nowBattery=${nowBat##*=}
	nowBattery=$((nowBattery * 100));
	batteryState=$((nowBattery / fullBattery));
	echo " Battery state: $batteryState"

	read -r -a dataTransferB <<< "$(getInterfacesData interfaces[@])"

	g=0
	for i in "${interfaces[@]}"
       	do
		fff=$((${dataTransferB[g]}-${interfacesData[g]}))
		g=$((g+1))

		ggg=$((${dataTransferB[g]}-${interfacesData[g]}))
                g=$((g+1))
		echo "Data speed transfer interface $i B/s receive: $fff B/s transmit: $ggg B/s"

        done

	interfacesData=("${dataTransferB[@]}")
	echo ""
	sleep 1

done
	
